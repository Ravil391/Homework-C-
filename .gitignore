#include <iostream> // библиотека ввода-вывода
#include <cmath> // мат.библиотека
int main() // возврат целого числа
{
    const int divCount = 2; // введение константы
    int divs[divCount] = {}; // введение стат.массива 
    for (int n = 174457; n <= 174505; n++) { // введение цикла, ввод цикла, введение итератора 
        int count = 0; // введение счетчика
        int q = int(sqrt(n)); // введение квадратного корня из переменной "n"
        for (int d = 2; d <= q; d++) { // вложенного цикла, ввод цикла, введение итератора
            if (n % d == 0) { //  нулевой остаток деления значений "n" и "d"
                count += 2; // если условие истинно к счетчику прибавляеться 2
                if (count <= divCount) { // введение конструкции ветвления, значение счетчика <= значению константы
                    divs[count - 2] = d; // если условие выполняется элемент массива присваиваеться значение "d"
                    if (d != n / d) { // если значение переменной "d" != частного значений переменных "n" и "d"
                        divs[count - 1] = n / d; // если условие истинно, массиву присваиваеться частное значений переменных "n" и "d"
                    } // окончание ветвления
                } // окончание ветвления
                else break; // условие не выполненно (счетчик > значения константы) - переход к следующему значению итератора
            } // окончание ветвления
        } // окончание цикла
        if (count == divCount) { //  конструкция ветвления, проверка равенства счетчика и константы 
            for (int i = 0; i < divCount; i++) {     // вложенного цикла, ввод цикла, введение итератора
                std::cout << divs[i] << ' '; //   значения массива
            } // окончание вложенного цикла
            std::cout << std::endl; // пространства имен std, выполняем перенос строки
        } // окончание ветвления
    } // окончание цикла
} // окончание функции
